#
msgid ""
msgstr ""
"Project-Id-Version: Plezuro 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-09 01:49+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/tutorial/about/how_to/index.rst:2
#: ../../source/tutorial/browser_programming/how_to/index.rst:2
msgid "How to"
msgstr "Co i jak"

#: ../../source/tutorial/about/how_to/index.rst:13
msgid "Plezuro.js"
msgstr ""

#: ../../source/tutorial/about/index.rst:2
msgid "About Plezuro"
msgstr "O Plezuro"

#: ../../source/tutorial/about/origin/index.rst:2
msgid "Origin"
msgstr "Pochodzenie"

#: ../../source/tutorial/about/origin/index.rst:4
msgid ""
"Where does Plezuro come from? Basically its author was not fully satisfied "
"with any existing programming language. So he thought about the inventing of"
" a new one. The name comes from the Esperanto and means 'pleasure'."
msgstr ""
"Skąd się wzięło Plezuro? Otóż jego autor nie był w pełni usatysfakcjonowany "
"żadnym z dotychczas istniejących języków programowania. Zatem pomyślał o "
"stworzeniu nowego. Nazwa pochodzi z Esperanto i znaczy 'przyjemność'."

#: ../../source/tutorial/about/rules/index.rst:2
msgid "Basic rules"
msgstr "Podstawowe zasady"

#: ../../source/tutorial/about/rules/index.rst:4
msgid ""
"Plezuro is an imperative, object-oriented, functional, procedural and "
"reflective programming language."
msgstr ""
"Plezuro to imperatywny, obiektowy, funkcyjny, proceduralny i refleksyjny "
"język programowania"

#: ../../source/tutorial/about/rules/index.rst:6
msgid "The main ideas are:"
msgstr "Główna założenia to:"

#: ../../source/tutorial/about/rules/index.rst:8
msgid "The code should be possibly short (as long as it is human readable)."
msgstr "Kod powinien być możliwie krótki."

#: ../../source/tutorial/about/rules/index.rst:10
msgid "Very simple syntax."
msgstr "Bardzo prosta składnia."

#: ../../source/tutorial/about/rules/index.rst:12
msgid "The code should be easy to read for a beginner programmer."
msgstr ""
"Kod powinien być łatwy do przeczytania dla początkującego programisty."

#: ../../source/tutorial/about/rules/index.rst:14
msgid ""
"The power of the language should be based on the standard library, not its "
"syntax."
msgstr ""
"Potęga języka powinna być oparta na standardowej bibliotece, a nie na jego "
"składni."

#: ../../source/tutorial/about/rules/index.rst:16
msgid "Explicit is always better than implicit."
msgstr "Jawne jest zawsze lepsze niż domniemane."

#: ../../source/tutorial/about/rules/index.rst:18
msgid "Everything is a variable."
msgstr "Wszystko jest zmienną."

#: ../../source/tutorial/about/rules/index.rst:20
msgid "Everything is an object."
msgstr "Wszystko jest obiektem."

#: ../../source/tutorial/about/rules/index.rst:22
msgid "Multiple inheritance."
msgstr "Wielokrotne dziedziczenie."

#: ../../source/tutorial/about/rules/index.rst:24
msgid "There is no difference between a module, a class and a namespace."
msgstr "Nie ma różnicy pomiędzy modułem, klasą i przestrzenią nazw."

#: ../../source/tutorial/about/rules/index.rst:26
msgid ""
"No annotations and other additional syntax - everything is based on the "
"basic syntax of the language."
msgstr ""
"Brak adnotacji i innych dodatkowych składni - wszystko jest oparte na "
"podstawowej składki języka."

#: ../../source/tutorial/basics/builtin_methods/index.rst:2
msgid "Built-in methods"
msgstr "Wbudowane metody"

#: ../../source/tutorial/basics/builtin_methods/index.rst:4
msgid ""
"In further reading you will take some knowledge of modules and methods in "
"Plezuro. However at this moment you should know how the method works. "
"Basically it is like a function calling. Zero argument (called this object) "
"is accessible via the keyword 'this'. Like in the function you can also use "
"such keywords 'first', 'second', 'third', 'args'. Calling a method, at the "
"first you write the zero argument (this object), than the dot ('.'), "
"function name, bracket opening ('('), arguments separated by the comma (',')"
" and the bracket closing (')'). However with no arguments the bracket is not"
" required."
msgstr ""
"W dalszych miejscach poradnika zdobędziesz pewną wiedzę o modułach i "
"metodach w Plezuro. Jednak już w tym momencie powinieneś wiedzieć jak "
"działają metody. Prosto mówiąc, to jest jak wywołanie funkcji. Zerowy "
"argument (zwany this - tym obiektem) jest dostępny poprzez słowo kluczowe "
"'this'. Tak jak w przypadku funkcji, możesz używać słów kluczowych takich "
"jak 'first', 'second', 'third', 'args'. Wywołując metodę, najpierw piszesz "
"zerowy argument (this), następnie kropkę ('.'), nazwę funkcji, otwarcie "
"nawiasu ('('), argumenty oddzielone przecinkiem (',') i w końcu zamknięcie "
"nawiasu (')'). Jednakże przy braku argumentów nawias nie jest konieczny."

#: ../../source/tutorial/basics/collections/index.rst:2
msgid "Collections"
msgstr "Kolekcje"

#: ../../source/tutorial/basics/collections/index.rst:4
msgid ""
"One of the indispensable features of a programming language are the "
"collections. Of course, Plezuro provides some sorts of it."
msgstr ""
"Jedną z nieodzownych możliwości języka programowania są kolekcje. "
"Oczywiście, Plezuro zapewnia niektóre z nich."

#: ../../source/tutorial/basics/collections/index.rst:9
#: ../../source/tutorial/basics/operators/index.rst:34
#: ../../source/tutorial/basics/operators/index.rst:35
msgid "List"
msgstr "Lista (List)"

#: ../../source/tutorial/basics/collections/index.rst:24
msgid "Set"
msgstr "Zbiór (Set)"

#: ../../source/tutorial/basics/collections/index.rst:26
msgid ""
"To create a set, you use dollar sign ('$') and brackets. This collections is"
" like the mathematical set. Each value can be contained only once."
msgstr ""
"Aby utworzyć zbiór, możesz użyć znaku dolara ('$') oraz nawiasów. Ta "
"kolekcja zachowuje się jak zbiór matematyczny. Każda wartość może wystąpić "
"co najwyżej jeden raz."

#: ../../source/tutorial/basics/collections/index.rst:34
msgid "Dictionary"
msgstr "Słownik (Dictionary)"

#: ../../source/tutorial/basics/collections/index.rst:48
msgid "Associative array"
msgstr "Tablica asocjacyjna"

#: ../../source/tutorial/basics/collections/index.rst:50
msgid ""
"It is like the associative array in PHP or object in Javascript. In the "
"version of Plezuro compiled to Javascript the main appliance of this "
"collection is to pass Javascript objects to methods from libraries. You "
"write it with a percent sign ('%') and brackets."
msgstr ""
"To jest jak tablica asocjacyjna w PHP czy też obiekt w Javascripcie. W "
"wersji Plezuro kompilowanej do Javascripta główne zastosowanie tego typu "
"kolekcji to przekazywanie obiektów do metod z bibliotek javascriptowych. "
"Możesz to zapisać jako procent ``%`` z nawiasami."

#: ../../source/tutorial/basics/comments/index.rst:2
msgid "Comments"
msgstr "Komentarze"

#: ../../source/tutorial/basics/conditions/index.rst:2
msgid "Conditions"
msgstr "Instrukcje warunkowe"

#: ../../source/tutorial/basics/conditions/index.rst:4
msgid ""
"At first, you should write the condition (function that return a boolean "
"value). Then write '.if' and in brackets and curlies write the expression "
"that will be executed when this expression is true. It is just a method of "
"the function type. Then you can use methods 'elif' and 'else' which are not "
"required."
msgstr ""
"Na początku powinieneś napisać warunek (funkcję zwracającą wartość "
"boolowską). Następnie '.if' oraz w nawiasach i klamrach wyrażanie, które "
"będzie wykonywane jeśli początkowy warunek jest prawdziwy. To po prostu "
"metoda typu funkcja. Następnie możesz użyć metod 'elif' oraz 'else', które "
"to nie są wymagane."

#: ../../source/tutorial/basics/exceptions/index.rst:2
msgid "Exceptions"
msgstr "Wyjątki"

#: ../../source/tutorial/basics/exceptions/index.rst:4
msgid ""
"One of the powerful features of a programming language is the exception "
"handling. It is also possible in Plezuro. However the syntax is a little bit"
" different because in this language almost all is based on the methods (even"
" conditionals and loops)."
msgstr ""
"Jedną z potężnych możliwości języka programowania jest przechwytywanie "
"wyjątków. To jest możliwe również w Plezuro. Jednakże składnia jest nieco "
"inna ponieważ w tym języku prawie wszystko jest oparte na metodach (nawet "
"instrukcje warunkowe i pętle)."

#: ../../source/tutorial/basics/functions/index.rst:2
msgid "Functions"
msgstr "Funkcje"

#: ../../source/tutorial/basics/functions/index.rst:4
msgid ""
"To write a function, you use just the curlies ('{', '}'). Everything in a "
"curly bracket is a function. It includes also conditions and loops. The zero"
" argument is accessible via the keyword 'this' and the next ones 'first', "
"'second' and 'third'. You have also access to the array of the arguments "
"using the keyword 'args'."
msgstr ""
"Aby napisać funkcję, należy użyć klamer ('{', '}'). Każdy kod wewnątrz klamry"
" jest funkcją. To dotyczy również instrukcji warunkowych i pętel Zerowy "
"argument jest dostępny poprzez słowo kluczowe 'this' a następne 'first', "
"'second', 'third'. Jest również dostęp do tablicy wszystkich argumentów "
"poprzez słowo kluczowe 'args'."

#: ../../source/tutorial/basics/functions/index.rst:9
msgid ""
"You can return a value with 'return' keyword. When in function execution no "
"previous value has been returned, it returns the value of the last statement"
" (like in Ruby)."
msgstr ""
"Można zwracać wartość przy użyciu słowa kluczowego 'return'. Kiedy w "
"wykonaniu funkcji dotychczas nie zwrócono żadnej wartości, jest zwracana "
"wartość ostatniego wyrażenie (tak jak w Ruby)."

#: ../../source/tutorial/basics/import/index.rst:2
msgid "Import"
msgstr "Import"

#: ../../source/tutorial/basics/import/index.rst:4
msgid ""
"It is recommended to divide programming projects to multiple source files. "
"You can do it with the 'import' method of the string type. It is also "
"possible to pass same parameters to the imported script, it works in the "
"same way like the function."
msgstr ""
"Jest zalecane dzielenie projektów programistycznych na wiele plików "
"źródłowych. Można to zrobić, wykorzystując metodę 'import' z typu String. "
"Można również przekazywać parametry do importowanego skryptu, to działa w "
"taki sposób jak w przypadku funkcji."

#: ../../source/tutorial/basics/index.rst:2
msgid "Basics"
msgstr "Podstawy"

#: ../../source/tutorial/basics/loops/index.rst:2
msgid "Loops"
msgstr "Pętle"

#: ../../source/tutorial/basics/loops/index.rst:4
msgid ""
"Loops look like conditional expressions. You use a method of the function "
"type."
msgstr ""
"Pętle wyglądają podobnie jak wyrażenie warunkowe. Jest używana metoda z typu"
" Function."

#: ../../source/tutorial/basics/loops/index.rst:6
msgid ""
"One of the loops provided in Plezuro is 'while'. At the beginning you write "
"a function which returned value determines if the function being the first "
"argument of the 'while' method is executed. After the first iteration the "
"conditional function is executed again. Execution of the first argument "
"function depends on the value from conditional function and so on."
msgstr ""
"Jedną z pętli istniejących w Plezuro to 'while'. Na początku należy napisać "
"funkcję (zerowy argument, od której zwróconej wartości zależy, czy funkcja "
"będąca pierwszym argumentem zostanie wykonana. Po pierwszej iteracji funkcja"
" warunkowa jest wykonywana kolejny raz. Późniejsze wykonywanie funkcji "
"będącej pierwszym argumentem znów zależy od wartości zwróconej przez funkcję"
" warunkową i tak dalej."

#: ../../source/tutorial/basics/loops/index.rst:14
msgid ""
"Another maybe simpler loop is 'do'. You write the conditional function. The "
"execution of the loop depends on the value returned by this function. So it "
"iterates as long as the function returns true."
msgstr ""
"Inną, może prostszą pętlą jest 'do'. Na początku pisze się funkcję "
"warunkową. Wykonanie pętli zależy od wartości zwróconej przez tę funkcję. "
"Zatem iteracje przebiegają tak długo, dopóki funkcja zwraca wartość true."

#: ../../source/tutorial/basics/magick_constants/index.rst:2
msgid "Magick constants"
msgstr "Magiczne stałe"

#: ../../source/tutorial/basics/magick_constants/index.rst:4
msgid ""
"Similar to PHP and Ruby, Plezuro has the magick constants. What is it and "
"why to use it? It is something a little bit like a variable and a little bit"
" like a constant. Its value depends on the place where it is used."
msgstr ""
"Podobnie do PHP i Ruby, Plezuro posiada magiczne stałe. Co to jest i "
"dlaczego to używać? To jest coś poniekąd jak zmienna a trochę jak stała. "
"Wartość zależy od miejsca, gdzie to jest użyte."

#: ../../source/tutorial/basics/magick_constants/index.rst:8
msgid "So we have the following magick constants:"
msgstr "Zatem mamy następujące magiczne stałe:"

#: ../../source/tutorial/basics/magick_constants/index.rst:10
msgid ""
"__pos__ - the horizontal position in a line (counting from 0, it is position"
" where the keyword begins)"
msgstr ""
"__pos__ - poziome położenie w obrębie linii (licząc od 0, to pozycja gdzie "
"słowo kluczowe zaczyna się)"

#: ../../source/tutorial/basics/magick_constants/index.rst:13
msgid "__line__ - the line number in a source file (counting from 0)"
msgstr "__line__ - numer linii w pliku źródłowym (licząc od 0)"

#: ../../source/tutorial/basics/magick_constants/index.rst:15
msgid "__file__ - the name of the source file"
msgstr "__file__ - nazwa pliku źródłowego"

#: ../../source/tutorial/basics/magick_constants/index.rst:17
msgid "__dir__ - the real directory of the source file"
msgstr "__dir__ - pełna nazwa folderu pliku źródłowego"

#: ../../source/tutorial/basics/operators/index.rst:2
#: ../../source/tutorial/objective/operators/index.rst:2
msgid "Operators"
msgstr "Operatory"

#: ../../source/tutorial/basics/operators/index.rst:10
msgid ""
"An important issue in Plezuro is you cannot have any operator immediately "
"(excluding whitespaces and comments) before bracket (')'), square bracket "
"(']') and curly ('}') close. So after the last element of the list you "
"cannot put the comma and after the last statement of the function you cannot"
" put the semicolon. In such a case it would be a syntax error."
msgstr ""
"Ważną sprawą w Plezuro jest to, że nie można mieć żadnego operatora "
"bezpośrednio (nie licząc białych znaków i komentarzy) przed zamknięciem "
"jakiegokolwiek nawiasu (``)``, ``]``, ``}``). Zatem po ostatnim elemencie "
"listy nie można postawić przecinka a także po ostatnim wyrażeniu funkcji nie"
" można postawić średnika. W takim przypadku doszłoby do błędu składniowego."

#: ../../source/tutorial/basics/operators/index.rst:41
msgid "Complete list of the operators:"
msgstr "Pełna lista operatorów:"

#: ../../source/tutorial/basics/operators/index.rst:43
msgid ""
"single-argument operators (the operator at the left, the argument at the "
"right)"
msgstr "jednoargumentowe operatory (operator po lewej, argument po prawej)"

#: ../../source/tutorial/basics/operators/index.rst:45
msgid "\"!\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:46
msgid "\"&&\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:47
msgid "\"**\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:48
msgid "\"#\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:49
msgid "\"~\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:50
msgid "\"=>\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:52
msgid "single-argument operators (the operator at the right)"
msgstr "jednoargumentowe operatory (operator po prawej stronie)"

#: ../../source/tutorial/basics/operators/index.rst:54
msgid "\"++\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:55
msgid "\"--\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:60
msgid "\";\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:61
msgid "\",\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:62
msgid "\":=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:63
msgid "\"=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:64
msgid "\"+=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:65
msgid "\"-=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:66
msgid "\"\\*=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:67
msgid "\"/=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:68
msgid "\"^=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:69
msgid "\"&=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:70
msgid "\"\\|=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:71
msgid "\"%=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:72
msgid "\".=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:73
msgid "\"~~\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:74
msgid "\"<->\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:75
msgid "\"<<\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:76
msgid "\">>\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:77
msgid "\"?\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:78
msgid "\"|\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:79
msgid "\"&\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:80
msgid "\"<=>\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:81
msgid "\">=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:82
msgid "\">\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:83
msgid "\"<=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:84
msgid "\"<\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:85
msgid "\"!=\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:86
msgid "\"==\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:87
msgid "\"!==\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:88
msgid "\"===\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:89
msgid "\"=~\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:90
msgid "\"!~\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:91
msgid "\"+\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:92
msgid "\"-\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:93
msgid "\"%\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:94
msgid "\"*\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:95
msgid "\"/\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:96
msgid "\"^\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:97
msgid "\"^^\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:98
msgid "\".\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:99
msgid "\"..\""
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:100
msgid "\":\""
msgstr ""

#: ../../source/tutorial/basics/random/index.rst:2
msgid "Random numbers"
msgstr "Losowe liczby"

#: ../../source/tutorial/basics/random/index.rst:4
msgid ""
"In computing it is useful for many purposes to generate random numbers. For "
"example, when you write a computer player to a game or in a web application "
"to generate registration links, local or web addreses and so on."
msgstr ""
"W programowaniu jest użyteczne w wielu przypadkach generowanie liczb "
"losowych. Np. kiedy tworzysz gracza komputerowego w jakiejś grze czy "
"generujesz linki rejestracyjne w aplikacji webowej i tak dalej."

#: ../../source/tutorial/basics/random/index.rst:9
msgid ""
"In Plezuro it is quite easy. You do not have to invoke any function or "
"method (however later it is compiled to a method invokation). Just write the"
" keyword 'rand'."
msgstr ""
"W Plezuro to bardzo proste. Nie musisz wywoływać żadnej funkcji czy metody "
"(jednak później jest to kompilowane do kodu z wywołaniem metody). Po prostu "
"wystarczy napisać słowo kluczowe `rand`."

#: ../../source/tutorial/basics/variables/index.rst:2
msgid "Variables"
msgstr "Zmienne"

#: ../../source/tutorial/basics/variables/index.rst:4
msgid ""
"Probably the most basic feature of a programing language are the variables. "
"What is it? The variable is a block of a program memory that you can change "
"at the runtime. You can assign it to a symbol and it works like the "
"mathematics. The only difference is a variable can change his value. For "
"example ```$x = 2 + 5; $y = x * 2```."
msgstr ""
"Prawdopodobnie najbardziej podstawową możliwością języka programowania są "
"zmienne. Co to jest? Zmienna to blok pamięci, który możesz zmieniać w "
"trakcie wykonywania programu. Możesz przypisać taki blok do symbolu, a "
"następnie to działa jak wyrażenia matematyczne. Jedyna różnica jest taka, że"
" zmienna może zmieniać swoją wartość. Np. ``$x = 2 + 5; $y = x * 2``."

#: ../../source/tutorial/basics/variables/index.rst:22
msgid "Declaration"
msgstr "Deklaracja"

#: ../../source/tutorial/basics/variables/index.rst:24
msgid ""
"Before we can use any variable, we have to declare it. It is pretty simple, "
"just write the name of the variable and the dollar sign ('$') immediately "
"before it. In next occurrences of a variable, you should write it without "
"the dollar sign."
msgstr ""
"Zanim możemy używać jakąkolwiek zmienną, musimy najpierw ją zadeklarować. To"
" bardzo prost, wystarczy napisać nazwę zmiennej, poprzedzając ją "
"bezpośrednio znakiem dolara ``$``. Przy następnych wystąpieniach zmiennej "
"należy jej nazwę pisać już bez dolara."

#: ../../source/tutorial/basics/variables/index.rst:30
msgid "Scope"
msgstr "Zasięg"

#: ../../source/tutorial/basics/variables/index.rst:40
msgid "What can be a variable?"
msgstr "Czym możne być zmienna?"

#: ../../source/tutorial/basics/variables/index.rst:42
msgid ""
"In Plezuro there is dynamic typing like in other dynamic languages such as "
"Python, Ruby or Javascript. Also everything is a variable (including "
"functions and modules). So a variable can change its type in the runtime. "
"For example at the first it is a number, then a list and finally a function."
msgstr ""
"W Plezuro występuje typowanie dynamiczne tak jak w innych dynamicznych "
"językach takich jak Python, Ruby czy Javascript. Również wszystko jest "
"zmienną (uwzględniając funkcje i moduły). Zatem zmienna może zmieniać swój "
"typ w trakcie wykonywania programu. Np. na początku jest ona liczbą, "
"następnie listą, a w końcu funkcją."

#: ../../source/tutorial/index.rst:2
msgid "Tutorial"
msgstr "Przewodnik"

#: ../../source/tutorial/objective/constructor/index.rst:2
msgid "Constructor"
msgstr "Konstruktor"

#: ../../source/tutorial/objective/constructor/index.rst:8
msgid ""
"However for readability of the source code, it is a good idea to use "
"constructors. What is exactly the constructor? It is a method that is "
"invoked immediately after the memory allocation for the object. It is very "
"explicit in Objective C when you at first allocate the memory and later you "
"initialize it (for most cases is in the same line)."
msgstr ""
"Aczkolwiek dla czytelności kodu źródłowego, dobrym pomysłem jest użycie "
"konstruktorów. Czym jest dokładnie konstruktor? To metoda wywoływana "
"bezpośrednio po zaalokowaniu pamięci dla obiektu. Jest to bardzo jawne w "
"Objective C gdzie najpierw w kodzie jest alokowana pamięć, a następnie "
"przebiega inicjalizacja (w większości przypadków jest to w tej samej linii)."

#: ../../source/tutorial/objective/constructor/index.rst:14
msgid ""
"In Plezuro the constructor is a method with the name 'init'. Such a method "
"is called automatically after the object creation."
msgstr ""
"W Plezuro konstruktor to metoda z nazwą 'init'. Taka metoda jest wywoływana "
"automatycznie po stworzeniu obiektu."

#: ../../source/tutorial/objective/constructor/index.rst:19
msgid "Default constructor"
msgstr "Konstruktor domyślny"

#: ../../source/tutorial/objective/constructor/index.rst:21
msgid ""
"However when you do not write any constructor, there exists a constructor "
"that is invoked. It is called the default constructor. What does it exactly "
"do? It invokes the constructors of all the parent modules. When a module "
"does not have any explicit parents it inherits from the BasicModule so in "
"such a situation the constructor of the BasicModule is called - it creates "
"the fields of the object from the associative array which is passed as a "
"first argument."
msgstr ""
"Wszakże kiedy brakuje w kodzie konstruktora, istnieje pewien konstruktor "
"który jest wywoływany. Zwany jest konstruktorem domyślnym. Co to dokładnie "
"robi? Wywołuje on konstruktory wszystkich modułów macierzystych. Kiedy moduł"
" nie ma żadnych jawnych rodziców, dziedziczy on po BasicModule, więc w "
"takiej sytuacji jest wywoływany konstruktor BasicModule, który to tworzy "
"pola obiektu z tablicy asocjacyjnej przekazanej jako pierwszy argument."

#: ../../source/tutorial/objective/dynamic_module_change/index.rst:2
msgid "Dynamic module change"
msgstr "Dynamiczna zmiana modułu"

#: ../../source/tutorial/objective/dynamic_module_change/index.rst:6
msgid "Method addition/change"
msgstr "Dodanie/usuwanie metody"

#: ../../source/tutorial/objective/dynamic_module_change/index.rst:8
msgid ""
"Except of creating a method during a module creation you can add dynamically"
" new methods to a module later. We could say 'at the runtime' but this term "
"is not suitable to the Plezuro because in this language everything is at the"
" runtime. The new method is visible in the direct objects of this module "
"(even created before the addition of a new method) as well in the objects of"
" the child modules. You can achieve that using the method 'addMethod'."
msgstr ""
"Poza tworzeniem metody w czasie powstawania modułu, można również "
"dynamicznie dodawać nowe metody później. Można by powiedzieć 'w trakcje "
"'wykonywania programu' ale to określenie nie jest odpowiednie w przypadku "
"Plezuro ponieważ w tymże języku wszystko dzieje się w trakcie wykonywania "
"programu. Nowa metoda jest widoczna w bezpośrednich obiektach danego modułu "
"(stworzonych nawet przed dodaniem nowej metody) jak również w obiektach "
"modułów dziedziczących. Możesz zrealizować to, używając metodą 'addMethod'."

#: ../../source/tutorial/objective/dynamic_module_change/index.rst:18
msgid "Method removing"
msgstr "Usuwanie metody"

#: ../../source/tutorial/objective/dynamic_module_change/index.rst:20
msgid ""
"It is even possible to remove a method. Nonetheless do not do it without any"
" reason. To do it, use the method 'removeMethod'."
msgstr ""
"Jest nawet możliwe usunąć metodę. Mimo wszystko nie rób tego bez powodu. Aby"
" to zrobić, użyj metody 'removeMethod'."

#: ../../source/tutorial/objective/index.rst:2
msgid "Objective programming"
msgstr "Programowanie obiektowe"

#: ../../source/tutorial/objective/index.rst:4
msgid ""
"Plezuro is an object-oriented language, there is multiple inheritance. It is"
" more dynamic then Java and .NET because you can add, change and remove "
"methods at the runtime."
msgstr ""
"Plezuro jest językiem obiektowym, występuje tutaj wielokrotne dziedziczenie."
" Jest bardziej dynamiczny niż Java i .NET ponieważ możesz dodawać, zmieniać "
"i usuwać metody w trakcie wykonywania programu."

#: ../../source/tutorial/objective/inheritance/index.rst:2
msgid "Inheritance"
msgstr "Dziedziczenie"

#: ../../source/tutorial/objective/inheritance/index.rst:11
msgid ""
"How does it work? Is is pretty simple, when you invoke a method on an "
"object, if there exists such a method directly in the module of this object,"
" this method is called. Otherwise it is a method from one of the parents of "
"the module (the order of finding a method is the same as the order of "
"declaring the parents in the module. The algorithm of find a method is "
"recursive. When no method is found, an exception is thrown. It is as you can"
" see it. However in reality in the moment of a module creation all the "
"methods are binded (direct ones and inherited ones), it is for the "
"performance."
msgstr ""
"Jak to działa? To bardzo proste, kiedy wywołujesz metodę, na obiekcie, kiedy"
" istnieje taka metoda bezpośrednio w module danego obiektu, metoda ta jest "
"wywołana. W przeciwnym razie jest to metoda z jednego z rodziców modułu "
"(kolejność znajdowania metody jest taki sam jak kolejność zadeklarowanych "
"rodziców przy tworzeniu modułu. Algorytm znajdowania metody jest "
"rekurencyjny. Jeśli żadna metoda nie została znaleziona, jest wyrzucany "
"wyjątek. W taki sposób możesz to zaobserwować. Natomiast w rzeczywistości w "
"momencie stworzenia modułu wszystkie metody są wiązane (bezpośrednie i "
"dziedziczone), tak jest ze względu na wydajność"

#: ../../source/tutorial/objective/inheritance/index.rst:20
msgid ""
"What about the polymorphism? Plezuro like other dynamic languages has a duck"
" typing. So you can invoke a method with a specific name from an object, not"
" knowing the module of the object. On the other hand, you can use the "
"multiple inheritance. You can create a module with a specific method and use"
" objects of this module in other methods or functions."
msgstr ""
"A co o na temat polimorfizmu? W Plezuro tak jak w innych dynamicznych "
"językach występuje duck typing. Zatem można wywołać metoda z konkretną nazwą"
" na danym obiekcie, nie znając modułu tego obiektu. Można także używać "
"wielokrotnego dziedziczenia. "

#: ../../source/tutorial/objective/inheritance/index.rst:28
msgid "Calling a parent method"
msgstr "Wywołanie metody rodzica"

#: ../../source/tutorial/objective/modules/index.rst:2
msgid "Modules"
msgstr "Moduły"

#: ../../source/tutorial/objective/modules/index.rst:4
msgid ""
"Modules are in the same time classes and namespaces. You can use a module to"
" create an object, you can use in statically (like static fields and methods"
" in Java) and you can assign other modules as static fields creating "
"namespaces. Of course you can create multiple classes in the same source "
"file, however it is recommended to write exactly one module in one file."
msgstr ""
"Moduły są jednocześnie klasami i przestrzeniami nazw. Można użyć moduł do "
"stworzenia obiektu, można go użyć w sposób statyczny (tak jak pola i metody "
"statyczne w Javie) a także przypisać inne moduły jako pola statyczne, "
"tworząc w ten sposób przestrzenie nazw. Oczywiście da się tworzyć wiele "
"modułów w tym samym pliku źródłowym, wszakże zalecane jest pisać dokładnie "
"jeden moduł w jednym pliku."

#: ../../source/tutorial/objective/modules/index.rst:9
msgid ""
"To create a module, you write 'Module.create' and you pass one argument to "
"this method which is an associative array containing module name (field "
"'name'), module namespace (field 'namespace', the methods (field 'methods'),"
" the parent modules (field 'parents') - the modules from which our module "
"inherits the methods. There are also some other fields that you can pass."
msgstr ""
"Aby stworzyć moduł, należy użyć składni ``Module.create`` i przekazać "
"dokładnie jeden parametr do tej metody, który to jest tablicą asocjacyjną "
"zawierającą nazwę modułu (pole 'name'), przestrzeń nazw modułu (pole "
"'namespace'), metody (pole 'methods'), a także rodziców (pole 'parents') - "
"czyli moduły z których dziedziczymy. Istnieją również inne pola, które można"
" przekazać."

#: ../../source/tutorial/objective/modules/index.rst:15
msgid "You can create an object of a module using method 'new'."
msgstr "Aby stworzyć obiekt danego modułu, należy użyć metody 'new'."

#: ../../source/tutorial/objective/objects_and_methods/index.rst:2
msgid "Objects and methods"
msgstr "Obiekty i metody"

#: ../../source/tutorial/objective/objects_and_methods/index.rst:4
msgid ""
"The main purpose of creating a module is you to use it as a template to "
"creating objects and to call methods from the objects. When you call a "
"method the object is accessible via the keyword 'this' and like in function "
"invocation you can use the keywords 'first', 'second', 'third' and 'args'."
msgstr ""
"Głównym celem tworzenie modułu jest jego użycie jak szablonu do budowania "
"obiektów i wywoływania metod z tychże obiektów. Kiedy wywołujesz metodę, "
"obiekt jest dostępny poprzez słowo kluczowe 'this' i tak jak w przypadku "
"wywołania funkcji, można używać słów kluczowych ``first``, ``second``, "
"``third`` oraz ``args``."

#: ../../source/tutorial/objective/objects_and_methods/index.rst:12
msgid "Object fields"
msgstr "Pola obiektów"

#: ../../source/tutorial/objective/objects_and_methods/index.rst:14
msgid ""
"To access an object field, you use the at sign ('@') and the field name. The"
" fields can be created in the constructor when the object is created or "
"later in any method."
msgstr ""
"Aby uzyskać dostęp do pola obiektu z metody wywołanej na tym obiekcie, "
"należy użyć znaku małpa ``@`` a bezpośrednio po nim podać nazwę pola. Pola "
"mogą być tworzone w konstruktorze kiedy obiekt jest tworzony lub później w "
"jakiejkolwiek metodzie."

#: ../../source/tutorial/objective/objects_and_methods/index.rst:19
msgid "Method from method call"
msgstr "Wywołanie metody z innej metody"

#: ../../source/tutorial/objective/objects_and_methods/index.rst:21
msgid ""
"To call a method from another method, you write the 'this' keyword, the dot "
"('.') and and the method name. Like in calling methods from outer objects "
"you can omit the bracket when it is no arguments."
msgstr ""
"Aby wywołać metodę z innej metody, należy napisać słowo kluczowe ``this``, "
"kropkę."

#: ../../source/tutorial/objective/objects_and_methods/index.rst:25
msgid ""
"Be aware that when you have an inner function (ex. a loop), the keyword "
"'this' has a different meaning. It is the zero argument of the inner "
"function. In the same way the object fields work."
msgstr ""
"Pamiętaj, w przypadku funkcji wewnętrznej (np. pętle), słowo kluczowe "
"``this`` oznacza co innego. Wtedy jest to zerowy argument funkcji "
"wewnętrznej. W ten sam sposób działają pola obiektu."

#: ../../source/tutorial/objective/operators/index.rst:4
msgid ""
"Similar to defining method of a module, you can define actions that will be "
"done when an object interacts with a specific operator."
msgstr ""
"Podobnie do definiowania modułu, można zdefiniować akcje, które zostaną "
"wykonane kiedy na obiekt będzie działać odpowiedni operator."

#: ../../source/tutorial/objective/static_fields_and_methods/index.rst:2
msgid "Static fields and methods"
msgstr "Pola i metody statyczne"

#: ../../source/tutorial/objective/static_fields_and_methods/index.rst:4
msgid ""
"Except of using a module like a template to creating objects, you can use it"
" in a static way with static fields and methods. You have to remember that "
"the static fields and methods are not inherited. Each static field or method"
" is binded strictly with one module."
msgstr ""
"Poza użyciem modułu jako szablon do tworzenia obiektów, możesz użyć go w "
"statyczny sposób za pomocą pól i metod statycznych. Powinieneś pamiętać, że "
"statyczne pola i metody nie są dziedziczone. Każde pole statyczne i każda "
"metoda statyczna są związane dokładnie z jednym modułem."

#: ../../source/tutorial/basics/operators/index.rst:21
msgid ""
"Generally we can specify some main actions of the operators (ex. for numbers"
" and strings)."
msgstr ""
"Ogólnie możemy wyróżnić pewne główne akcje operatorów (np. dla liczb i "
"stringów)."

#: ../../source/tutorial/basics/operators/index.rst:24
msgid "Type of left argument"
msgstr "Typ lewego argumentu"

#: ../../source/tutorial/basics/operators/index.rst:24
msgid "Operator"
msgstr "Operator"

#: ../../source/tutorial/basics/operators/index.rst:24
msgid "Action"
msgstr "Akcja"

#: ../../source/tutorial/basics/operators/index.rst:24
msgid "Example"
msgstr "Przykład"

#: ../../source/tutorial/basics/operators/index.rst:24
msgid "Result"
msgstr "Wynik"

#: ../../source/tutorial/basics/operators/index.rst:26
#: ../../source/tutorial/basics/operators/index.rst:27
#: ../../source/tutorial/basics/operators/index.rst:28
#: ../../source/tutorial/basics/operators/index.rst:29
#: ../../source/tutorial/basics/operators/index.rst:30
#: ../../source/tutorial/basics/operators/index.rst:31
msgid "Number"
msgstr "Liczba"

#: ../../source/tutorial/basics/operators/index.rst:26
#: ../../source/tutorial/basics/operators/index.rst:32
#: ../../source/tutorial/basics/operators/index.rst:34
msgid "\\+"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:26
msgid "addition"
msgstr "dodawanie"

#: ../../source/tutorial/basics/operators/index.rst:26
msgid "1+4"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:26
msgid "5"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:27
msgid "\\-"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:27
msgid "subtraction"
msgstr "odejmowanie"

#: ../../source/tutorial/basics/operators/index.rst:27
msgid "4-7"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:27
msgid "-3"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:28
#: ../../source/tutorial/basics/operators/index.rst:33
#: ../../source/tutorial/basics/operators/index.rst:35
msgid "\\*"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:28
#: ../../source/tutorial/basics/operators/index.rst:33
#: ../../source/tutorial/basics/operators/index.rst:35
msgid "multiplication"
msgstr "mnożenie"

#: ../../source/tutorial/basics/operators/index.rst:28
msgid "8.5*2"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:28
msgid "17"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:29
msgid "/"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:29
msgid "division"
msgstr "dzielenie"

#: ../../source/tutorial/basics/operators/index.rst:29
msgid "1/4"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:29
msgid "0.25"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:30
msgid "^"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:30
msgid "power"
msgstr "potęga"

#: ../../source/tutorial/basics/operators/index.rst:30
msgid "4^3"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:30
msgid "64"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:31
msgid "%"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:31
msgid "modulo"
msgstr "reszta z dzielenia"

#: ../../source/tutorial/basics/operators/index.rst:31
msgid "7%3"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:31
msgid "1"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:32
#: ../../source/tutorial/basics/operators/index.rst:33
msgid "String"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:32
#: ../../source/tutorial/basics/operators/index.rst:34
msgid "concatenation"
msgstr "konkatenacja"

#: ../../source/tutorial/basics/operators/index.rst:32
msgid "'a'+'b'"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:32
msgid "'ab'"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:33
msgid "'a'\\*3"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:33
msgid "'aaa'"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:34
msgid "[2,3]+[1]"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:34
msgid "[2,3,1]"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:35
msgid "[2,3]*2"
msgstr ""

#: ../../source/tutorial/basics/operators/index.rst:35
msgid "[2,3,2,3]"
msgstr ""

#: ../../source/tutorial/browser_programming/how_to/index.rst:4
msgid ""
"Contrary to Javascript, Plezuro cannot be embedded to HTML. It is not a "
"missing feature, rather a way to maintain a readable code. So you must "
"include a Javascript generated from Plezuro source in an HTML file. Moreover"
" you must include the plezuro.js library."
msgstr ""
"Przeciwnie do Javascripta, Plezuro nie może być zagnieżdżony w kodzie HTML. "
"To nie brakująca możliwość ale raczej sposób na utrzymaniu czytelnego kodu. "
"Zatem trzeba dołączyć w pliku HTML Javascript wygenerowany ze źródła w "
"Plezuro. Ponadto należy dołączyć bibliotekę plezuro.js."

#: ../../source/tutorial/browser_programming/index.rst:2
msgid "Web browser programming"
msgstr "Programowanie na przeglądarkę internetową"

#: ../../source/tutorial/browser_programming/index.rst:4
msgid ""
"As you just know, Plezuro is compiled to Javascript. So we can write "
"applications runned in the web browser (client-side web apps)."
msgstr ""
"Jak już wiesz, Plezuro jest kompilowany do Javascripta. W związku z tym "
"możemy pisać aplikacje wykonywane w przeglądarce internetowe (aplikacje "
"webowe wykonywane po stronie klienta)."

#: ../../source/tutorial/browser_programming/index.rst:7
msgid "What should you know first?"
msgstr "Co należy znać najpierw?"

#: ../../source/tutorial/browser_programming/index.rst:9
msgid ""
"To be able to develop web apps in Plezuro, you should know HTML and CSS (at "
"least the basics). You can read it from the following tutorials:"
msgstr ""
"Aby móc tworzyć aplikacje webowe w Plezuro, powinieneś znać HTML i CSS "
"(przynajmniej podstawy). Możesz się nauczyć tego z następujących "
"przewodników:"

#: ../../source/tutorial/browser_programming/index.rst:13
msgid "http://www.w3schools.com/html/default.asp"
msgstr ""

#: ../../source/tutorial/browser_programming/index.rst:14
msgid "http://www.w3schools.com/css/default.asp"
msgstr ""

#: ../../source/tutorial/browser_programming/output/index.rst:2
msgid "Output"
msgstr "Wyjście"

#: ../../source/tutorial/index.rst:4
msgid "This is tutorial of Plezuro programming language."
msgstr "To jest przewodnik po języku programowania Plezuro"

#: ../../source/tutorial/index.rst:6
msgid "For whom is it?"
msgstr "**Dla kogo to jest?**"

#: ../../source/tutorial/index.rst:14
msgid ""
"If you are new to programming, this tutorial should be readable for you "
"because it explaines how the stuff works but if you do not understand it "
"maybe you should learn first basics of Javascript (it is the most related to"
" Plezuro) or eventually another programming language."
msgstr ""
"Jeśli programowanie jest czymś nowym dla ciebie, ten poradnik powinien być "
"zrozumiały dla ciebie, ponieważ wyjaśnia on, jak wszystko działa. Jeśli "
"jednak nie rozumiesz tego, być może najpierw powinieneś najpierw nauczyć się"
" podstaw Javascripta (ten język jest najbardziej zbliżony do Plezuro) lub "
"ewentualnie nauczyć się jeszcze innego języka programowania"

#: ../../source/tutorial/index.rst:20
msgid "Other useful materials"
msgstr "**Inne przydatne matetiały**"

#: ../../source/tutorial/index.rst:22
msgid ""
"If you want to learn more, you can read the specification of Plezuro. It is "
"written in a not complicated manner. This is just a view from another site. "
"You can read Plezuro scripts on Github and try to write something similar."
msgstr ""
"Jeśli chcesz, nauczyć się więcej, powinieneś przeczytać specyfikację "
"Plezuro. Jest ona napisana w niezbyt skomplikowany sposób. To po prostu "
"spojrzenie z innej strony. Możesz przeglądać skrypty Plezuro na Githubie i "
"próbować napisać coś podobnego."

#: ../../source/tutorial/about/how_to/index.rst:28
msgid "Basic usage of the compiler: ``plezuro.jar input.plez output.plez.js``"
msgstr ""
"Podstawowe użycie kompilatora: ``plezuro.jar input.plez output.plez.js``"

#: ../../source/tutorial/browser_programming/ajax/index.rst:2
#: ../../source/tutorial/browser_programming/jQuery/index.rst:13
msgid "AJAX"
msgstr "AJAX"

#: ../../source/tutorial/browser_programming/ajax/index.rst:4
msgid ""
"AJAX stands for Asynchronous Javascript and XML. It is a set of web "
"development techniques to create asynchronous web applications. Nonetheless "
"XML is not necessary in AJAX, it can be any sort of data (JSON, CSV, HTML, "
"CSS, images, Javascript). AJAX is almost always associated with a serwer-"
"side programming (a server response dependent on the request). Technically "
"it is always true because you send a request and a server in regard to it "
"returns a response. However not always a script in a language such as PHP, "
"Python or Ruby is needed. Server can also return some static data (ex. "
"images) according to their path. The best example is the Apache 2 server."
msgstr ""
"AJAX to skrót od Asynchronous Javascript and XML (Asynchroniczny Javascript "
"i XML). Jest to zbiór praktyk programistycznych do tworzenia "
"asynchronicznych aplikacji webowych. Chociaż sama nazwa mówi o XML, może być"
" użyty jakikolwiek rodzaj danych (JSON, CSV, HTML, CSS, obrazki, "
"Javascript). AJAX jest prawie zawsze powiązany z programowanie po stronie "
"serwera (odpowiedź serwera zależna od żądania). Technicznie to zawsze "
"prawda, bo wysyłasz żądanie a serwer w zależności od niego zwraca odpowiedź."
" Tymczasem nie zawsze się to wiąże ze skryptem w języku takim jak PHP, "
"Python czy Ruby. Jest tak ponieważ serwer może też zwrócić statyczne dane "
"(np. obrazki) w zależności od ścieżki. Najlepszym przykładem jest serwer "
"Apache 2."

#: ../../source/tutorial/browser_programming/ajax/index.rst:14
msgid ""
"From a client-side developper point of view it enables the communication "
"with the server without page reloading. For example you would like to store "
"some date on the server for security reasons, check if a data provided by "
"the user matches that on the server or download some content dynamically "
"(HTML, CSS, images, other Javascripts) that would be enormous if downloaded "
"fully."
msgstr ""
"Z punktu widzenia programisty front-end, AJAX umożliwia komunikację z "
"serwerem bez przeładowania strony. Np. chciałbyś przechować jakieś dane na "
"serwerze z powodów bezpieczeństwa, sprawdzić czy dane wprowadzone przez "
"użytkownika pasują do tych na serwerze czy też ściągnąć jakieś zasoby "
"dynamicznie (HTML, CSS, obrazki, inne Javascripty), w przypadku których "
"byłyby wielkie rozmiary jeśli pobierałoby się je w całości."

#: ../../source/tutorial/browser_programming/ajax/index.rst:21
msgid ""
"Probably the best way to make an AJAX request is using jQuery at reasons of "
"browser compatibility and code readability."
msgstr ""
"Prawdopodobnie najlepszy sposób do wysłania zapytania AJAX jest użycie "
"jQuery z powodów kompatybilności między przeglądarkami i czytelności kodu."

#: ../../source/tutorial/browser_programming/ajax/index.rst:0
msgid "ajax/index.html"
msgstr ""

#: ../../source/tutorial/browser_programming/ajax/index.rst:0
msgid "ajax/main.plez"
msgstr ""

#: ../../source/tutorial/browser_programming/angular/index.rst:2
msgid "AngularJS"
msgstr ""

#: ../../source/tutorial/browser_programming/angular/index.rst:4
msgid ""
"AngularJS is a framework used mostly in single-page applications. It is a "
"part of MEAN software stack:"
msgstr ""
"AngularJS to framework używane głównie w aplikacjach na jedną podstronę "
"(single page application). Stanowi on część pakietu MEAN:"

#: ../../source/tutorial/browser_programming/angular/index.rst:7
msgid "MongoDB - a database"
msgstr "MongoDB - baza danych"

#: ../../source/tutorial/browser_programming/angular/index.rst:8
msgid "Express.js - a back-end framework"
msgstr "Express.js - framework back-end"

#: ../../source/tutorial/browser_programming/angular/index.rst:9
msgid "AngularJS - a front-end framework"
msgstr "AngularJS - framework front-end"

#: ../../source/tutorial/browser_programming/angular/index.rst:10
msgid "Node.js - a back-end platform"
msgstr "Node.js - platforma back-end"

#: ../../source/tutorial/browser_programming/angular/index.rst:12
msgid ""
"All of these four technologies are based on Javascript so they are enable to"
" develop in Plezuro."
msgstr ""
"Wszystkie spośród tychże czterech technologii są oparte na Javascripcie, "
"więc można je używać w Plezuro."

#: ../../source/tutorial/browser_programming/angular/index.rst:15
msgid ""
"The examples below have origin from https://angularjs.org/ and later were "
"adapted to Plezuro."
msgstr ""
"Przykłady poniżej zostały wzięte z https://angularjs.org/, a następnie "
"zaadoptowane do Plezuro."

#: ../../source/tutorial/browser_programming/angular/index.rst:0
msgid "angular/index.html"
msgstr ""

#: ../../source/tutorial/browser_programming/angular/index.rst:0
msgid "angular/todo.css"
msgstr ""

#: ../../source/tutorial/browser_programming/angular/index.rst:0
msgid "angular/todo.plez"
msgstr ""

#: ../../source/tutorial/browser_programming/how_to/index.rst:0
msgid "basic/index.html"
msgstr ""

#: ../../source/tutorial/browser_programming/how_to/index.rst:0
msgid "basic/main.plez"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:2
msgid "HTML DOM methods and events"
msgstr "Metody i zdarzenia HTML DOM"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:4
msgid ""
"After previous chapters you are able to create any HTML document statically "
"with ``doument.write``. But probably you wonder to create an interactive "
"app. For example after button pressing an input will change his value."
msgstr ""
"Po pierwszych podrozdziałach, jesteś w stanie stworzyć statycznie dokument "
"HTML przy użyciu ``document.write``. Jednak prawdopodobnie chciałbyś "
"stworzyć interaktywną aplikację. Np. po kliknięciu na przycisk input zmieni "
"swoją wartość."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:11
msgid "How to get an element?"
msgstr "Jak dostać element?"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:13
msgid ""
"You can use the standard Javascript methods in Plezuro. Eventually you can "
"use some methods from external libraries such like jQuery."
msgstr ""
"Możesz użyć standardowych metod Javascript w Plezuro. Ewentualnie da się "
"użyć metod z zewnętrznych bibliotek takich jak jQuery."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:17
msgid "**document.getElementById**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:19
msgid ""
"It returns the element with matching 'id' attribute. Remember if you include"
" your script in the HEAD section, the elements are not loaded so you cannot "
"immediately get any element, in this case you should use the proper event."
msgstr "Zwraca element z pasującym atrybutem 'id'."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:24
msgid "**document.getElementsByTagName**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:26
msgid ""
"It returns the collection of all the elements of the tag name specified as "
"the first argument. For example ``document.getElementsByTagName('div')`` "
"will return the collection of all divs in the document."
msgstr ""
"Zwraca kolekcję wszystkich elementów z nazwą tagu określoną jako pierwszy "
"parametr. Np. ``document.getElementsByTagName('div')`` zwróci kolekcję "
"wszystkich divów w dokumencie."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:31
msgid "**document.getElementsByName**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:33
msgid ""
"The collection of all the elements with the value of 'name' attribute "
"specified as the first argument."
msgstr ""
"Kolekcja wszystkich elementów z wartością atrybutu 'name' określoną jako "
"pierwszy argument."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:37
msgid "**document.getElementsByClassName**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:39
msgid ""
"The collection of all the elements with the value of 'class' attribute "
"specified as the first argument."
msgstr ""
"Kolekcja wszystkich elementów z wartością atrybutu 'class' określoną jako "
"pierwszy argument."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:43
msgid "**document.getElementsByTagNameNS**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:45
msgid ""
"Similar to getElementsByTagName but the first argument specifies the name of"
" the namespace and the second one the tag name. It is used rather in XML "
"DOM."
msgstr ""
"Podobnie do getElementsByTagName ale pierwszy argument określa nazwę "
"przestrzeni nazw a drugi nazwę tagu. Jest to bardziej używane w XML DOM."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:49
msgid "**document.querySelector**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:51
msgid ""
"It returns the first element that matches the CSS selector in the first "
"argument. For example ``document.querySelector('table button')`` will return"
" the first button in the first table that contain a button."
msgstr ""
"Zwraca pierwszy element, do którego pasuje selektor CSS w pierwszym "
"argumencie. Np. ``document.querySelector('table button')`` zwróci pierwszy "
"przycisk (button) w pierwszej tabeli, która zawiera jakikolwiek przycisk."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:56
msgid "**document.querySelectorAll**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:58
msgid ""
"It return the collection of all the elements that match the given CSS "
"selector."
msgstr ""
"Zwraca kolekcję wszystkich elementów, dla których pasuje podany selektor "
"CSS."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:63
msgid "How to operate on elements?"
msgstr "Jak działać na elementach?"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:65
msgid "**innerHTML**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:67
msgid ""
"It is the simplest way to change the content of an element, it just inserts "
"any HTML into the element. For example ``element['innerHTML'] = "
"'<button>OK</button>'``."
msgstr ""
"To najprostszy sposób, aby zmienić zawartość elementu. Po prostu wstawia "
"jakikolwiek HTML do wnętrza elementu. Np. ``element['innerHTML'] = "
"'<button>OK</button>'``."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:72
msgid "**setAttribute**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:74
msgid "For example ``element.setAttribute('name', 'age')``"
msgstr "Np. ``element.setAttribute('name', 'wiek')``"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:77
msgid "**style**"
msgstr "**styl**"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:84
msgid "**document.createElement**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:86
msgid ""
"You can create an element. The first argument specifies the tag name. For "
"example, to create a div, you write ``document.createElement('div')``."
msgstr ""
"Możesz stworzyć element. Pierwszy argument określa nazwę tagu. Np. aby "
"stworzyć div, należy napisać ``document.createElement('div')``."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:90
msgid "**document.appendChild**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:92
msgid ""
"When you have just created an element you can add it to another element "
"either existing in the HTML DOM or not."
msgstr ""
"Skoro już stworzyłeś element, możesz dodać go do innego elementu za równo "
"istniejącego w HTML DOM lub nie."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:96
msgid "**document.removeChild**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:98
msgid "You can remove an element specified as the first argument."
msgstr "Możesz usunąć element przekazany jako pierwszy argument."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:101
msgid "**document.replaceChild**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:103
msgid ""
"You can replace an element passed as the first argument to an element passed"
" as the second argument."
msgstr ""
"Możesz zastąpić element przekazany jako pierwszy argument na element "
"przekazany jako drugi argument."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:107
msgid "**document.createTextNode**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:109
msgid ""
"You can create a text node with the value specified as the first argument "
"and then append such a node to an element."
msgstr ""
"Możesz stworzyć węzeł tekstowy z wartością określoną jako pierwszy argument "
"a następnie dodać taki węzeł do elementu."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:115
msgid "How to listen to en event?"
msgstr "Jak nasłuchiwać zdarzenia?"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:117
msgid ""
"To provide some interaction it is useful to listen to the events. We can "
"detect among others: a mouse click, a key pressing, a document being loaded,"
" a document mutation, an object mutation, browser window resizing."
msgstr ""
"Aby zapewnić interakcję, przydatne jest nasłuchiwane zdarzeń. Możemy wykryć "
"m.in.: kliknięcie myszą, wciśnięcie klawisza, załadowanie dokumentu, zmianę "
"dokumentu, zmianę obiektu, zmianę rozmiaru okna przeglądarki."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:121
msgid ""
"You can see the full list of events for Firefox on "
"https://developer.mozilla.org/en-US/docs/Web/Events, or for any browser on "
"http://www.w3schools.com/tags/ref_eventattributes.asp."
msgstr ""
"Możesz zobaczyć pełną listę zdarzeń dla Firefox na "
"https://developer.mozilla.org/en-US/docs/Web/Events, a dla dowolnej "
"przeglądarki na http://www.w3schools.com/tags/ref_eventattributes.asp."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:125
msgid "Let us enumerate the most important ones."
msgstr "Wymieńmy najważniejsze z nich."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:128
msgid "**onclick**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:130
msgid ""
"It fires after the mouse click (pressing and releasing the mouse button). "
"For example ``element['onclick'] = { this['parentNode'].removeChild(this); "
"null }``"
msgstr ""
"Jest wywoływany po kliknięciu myszą (wciśnięcie i puszczenie przycisku "
"myszy).Np. ``element['onclick'] = { this['parentNode'].removeChild(this); "
"null }``"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:134
msgid "**onkeydown**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:136
msgid "It fires after a key being pressed."
msgstr "Jest wywoływany po wciśnięciu klawisza."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:139
msgid "**onkeypress**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:144
msgid "**onkeyup**"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:146
msgid "It fires after a key being released."
msgstr "Jest wywoływany po puszczeniu klawisza."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:0
msgid "dom_methods/index.html"
msgstr ""

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:0
msgid "dom_methods/main.plez"
msgstr ""

#: ../../source/tutorial/browser_programming/html_elements/index.rst:2
msgid "HTML elements"
msgstr "elementy HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:4
msgid ""
"In HTML programming (not each web browsing programming is HTML programming "
"because you can use eventually Java applets, Adobe Flash or Silverlight "
"which are deprecated technologies) almost all you see in the browser are the"
" HTML elements. The exceptions include alerts and different sorts of info "
"from browser."
msgstr ""
"W programowaniu HTML (nie każde programowanie na przeglądarkę internetową to"
" programowanie HTML ponieważ istnieją takie technologie jak aplety Java, "
"Adobe Flash czy Silverlight, jednakże są one przestarzałe) prawie wszystko, "
"co widzisz w przeglądarce to elementy HTML. Wyjątkami są alerty i różne "
"rodzaje powiadomień z przeglądarki."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:10
msgid ""
"This is a powerful tool. In the desktop application development in most of "
"frameworks you cannot use such tool and it makes the front-end development "
"really harder."
msgstr ""
"To potężne narzędzie. W programowaniu aplikacji desktopowych w większości "
"frameworków nie ma takiego narzędzie i to czyni programowanie GUI znacznie "
"trudniejszym."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:17
#: ../../source/tutorial/browser_programming/storage/index.rst:11
msgid "HTML DOM"
msgstr ""

#: ../../source/tutorial/browser_programming/html_elements/index.rst:20
msgid "**What is an HTML element?**"
msgstr "**Czym jest element HTML?**"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:22
msgid ""
"It can an atomic part of the view you see in the browser (ex. an input, a "
"button, a span), as well something you cannot see (because it is hidden, it "
"has the 0 size or it contains no text) or a tree of other elements."
msgstr ""
"Może być najmniejszą niepodzielną częścią widoku, który widzisz w "
"przeglądarce (np. input, button, span), jak również tym, czego nie możesz "
"zobaczyć (ponieważ jest ukryty, ma rozmiar 0 lub nie zawiera żadnego tekstu)"
" albo ewentualnie drzewem innych elementów."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:26
msgid "**What is a tree?**"
msgstr "**Czym jest drzewo?**"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:28
msgid ""
"We can imagine an object tree like a real tree. Each element (node) is a "
"place where one branch is divided to multiple branches (in a special case "
"still one), a leaf (where the tree ends) or the begin of the tree (where it "
"grows out of the ground)."
msgstr ""
"Możemy sobie wyobrazić drzewo obiektów na kształt prawdziwego drzewa. Każdy "
"element (węzeł) to miejsce gdzie jedna gałąź rozdziela się na wiele gałęzi "
"(w szczególnym przypadku nadal jedno), liść (gdzie drzewo się kończy) lub "
"początek drzewa (gdzie wyrasta z ziemi)."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:33
msgid "**Relations in a tree**"
msgstr "**Relacje w drzewie**"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:35
msgid "One element for another can be:"
msgstr "Jeden element dla innego może być:"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:37
msgid "child (in special case the first child)"
msgstr ""
"dzieckiem - child (w szczególnym przypadku pierwszym dzieckiem - first "
"child)"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:38
msgid "parent"
msgstr "rodzicem - parent"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:39
msgid "sibling (in special case the next sibling)"
msgstr ""
"rodzeństwem - sibling (w szczególnym przypadku następnym rodzeństwem  - next"
" sibling)"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:40
msgid "ancestor"
msgstr "przodkiem a- ancestor"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:41
msgid "offspring"
msgstr "potomkiem - offspring"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:42
msgid "none of the above"
msgstr "niczym z powyższych"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:44
msgid ""
"Let us notice a child is also an offspring, as well a parent is an ancestor."
msgstr ""
"Zauważmy, że dziecko jest jednocześnie potomkiem, jak również rodzic jest "
"jednocześnie przodkiem."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:47
msgid ""
"If you just know same basics of HTML, you should know the outer element is "
"HTML. In reality there is a child of the document which is the most outer "
"element in the whole HTML DOM."
msgstr ""
"Skoro już znasz podstawy HTML, powinieneś wiedzieć, że zewnętrznym elementem"
" jest HTML. Tak na prawdę to dziecko elementu document, który to jest "
"najbardziej zewnętrznym elementem w całym HTML DOM."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:52
msgid "**Why is it so important?**"
msgstr "**Dlaczego jest to tak ważne?**"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:54
msgid ""
"Knowing an element, you can operate on his children, siblings, parent. You "
"can replace the children order, copy a subtree and so on."
msgstr ""
"Znając element, możesz operować na jego dzieciach, rodzeństwie, rodzicu. "
"Możesz zmieniać kolejność dzieci, kopiować poddrzewo i tak dalej."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:57
msgid "**What Plezuro can do?**"
msgstr "**Co Plezuro może zrobić?**"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:59
msgid "change HTML elements (ex. the text)"
msgstr "zmieniać elementy HTML (np. tekst)"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:60
msgid "add HTML elements"
msgstr "dodawać elementy HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:61
msgid "remove HTML elements"
msgstr "usuwać elementy HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:62
msgid "clone HTML elements"
msgstr "klonować elementy HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:63
msgid "change HTML attributes"
msgstr "zmieniać atrybuty HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:64
msgid "add HTML attributes"
msgstr "dodawać atrybuty HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:65
msgid "remove HTML attributes"
msgstr "usuwać atrybuty HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:66
msgid "change CSS styles"
msgstr "zmieniać style CSS"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:67
msgid "create new HTML events"
msgstr "tworzyć nowe zdarzenia HTML"

#: ../../source/tutorial/browser_programming/html_elements/index.rst:69
msgid ""
"It implies some additional features. For example cloning, removing and "
"adding an element, you can move it."
msgstr ""
"Z tego wynikają dodatkowe możliwości. Np. klonując, usuwając i dodając "
"element, możesz zmieniać jego położenie."

#: ../../source/tutorial/browser_programming/jQuery/index.rst:2
msgid "jQuery"
msgstr ""

#: ../../source/tutorial/browser_programming/jQuery/index.rst:4
msgid ""
"jQuery is a powerful Javascript library which gives you all the browser "
"features that are not included in the pure Javascript and which makes the "
"code shorter and more readable."
msgstr ""
"jQuery to potężna biblioteka Javascript, która daje ci wszystkie możliwości "
"działanie w przeglądarce, których brakuje w czystym Javascript i która czyni"
" kod krótszym i bardziej czytelnym."

#: ../../source/tutorial/browser_programming/jQuery/index.rst:8
msgid "The main features:"
msgstr "Główne możliwości to:"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:10
msgid "DOM element selection"
msgstr "selekcja elementów HTML"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:11
msgid "DOM manipulation"
msgstr "manipulacja DOM"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:12
msgid "events"
msgstr "zdarzenia"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:14
msgid "control of the asynchronous processing"
msgstr "kontrola przetwarzania asynchronicznego"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:15
msgid "extensibility"
msgstr "rozszerzalność"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:16
msgid "multi-browser support"
msgstr "wsparcie w wielu przeglądarkach"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:18
msgid ""
"Theoretically jQuery works in the same way in all the browsers. In reality "
"some differences are possible, for example the selector uses the "
"document.querySelectorAll which behaves a little bit differently depending "
"on the browser."
msgstr ""
"Teoretycznie jQUery działa w taki sam sposób we wszystkich przeglądarkach. W"
" rzeczywistości mogą się zdarzyć pewne różnice, np. selektor używa "
"document.querySelectorAll który zachowuje się nieco różnie w zależności od "
"przeglądarki."

#: ../../source/tutorial/browser_programming/jQuery/index.rst:23
msgid "To use this library in Plezuro, be aware of:"
msgstr "Aby używać tę bibliotekę, powinieneś być świadomy:"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:25
msgid ""
"The most common use in Javascript is based on the ``$`` variable. In Plezuro"
" it breaks the rules of the variable naming so you can access to the jQuery "
"with the ``jQuery`` variable or eventually using ``eval('$')``."
msgstr ""
"Najpopularniejsze użycie w Javascript jest oparte na zmiennej ``$``. W "
"Plezuro jest to sprzeczne z zasadami nazewnictwa zmiennych, zatem aby "
"uzyskać dostęp do jQuery, powinieneś użyć zmiennej ``jQuery`` lub "
"ewentualnie ``eval('$')``."

#: ../../source/tutorial/browser_programming/jQuery/index.rst:28
msgid ""
"You must pass the proper variable as the first argument of ``jQuery`` "
"function, not as the zero argument."
msgstr ""
"Musisz przekazać odpowiednią zmienną jako pierwszy argument funkcji jQuery, "
"a nie jako zerowy argument."

#: ../../source/tutorial/browser_programming/jQuery/index.rst:30
msgid ""
"In Plezuro everything is an object but jQuery selector must be a true "
"Javascript string, so you must invoke the ``toString`` method."
msgstr ""
"W Plezuro wszystko jest obiektem a selektor jQuery musi być prawdziwym "
"stringiem z Javascripta, zatem musisz wywołać metodę ``toString``."

#: ../../source/tutorial/browser_programming/jQuery/index.rst:0
msgid "jQuery/index.html"
msgstr ""

#: ../../source/tutorial/browser_programming/jQuery/index.rst:0
msgid "jQuery/main.plez"
msgstr ""

#: ../../source/tutorial/browser_programming/jQuery/index.rst:42
msgid ""
"Fortunately, there is a simpler way to call jQuery in Plezuro using a "
"special binding. Then you use the ``_jQ`` function and the code looks in the"
" following way:"
msgstr ""
"Na szczęście, istnieje prostszy sposób na wywołanie jQuery w Plezuro przy "
"użyciu specjalnego połączenia. Wystarczy użyć funkcji ``_jQ`` i wtedy kod "
"wygląda w następujący sposób:"

#: ../../source/tutorial/browser_programming/jQuery/index.rst:0
msgid "jQuery_binding/main.plez"
msgstr ""

#: ../../source/tutorial/browser_programming/output/index.rst:4
msgid "You can use the standard Javascript ways to output:"
msgstr ""
"Można używać standardowych sposobów Javascripta do wyświetlania na wyjściu:"

#: ../../source/tutorial/browser_programming/output/index.rst:6
msgid "printing into an alert box, using ``window.alert()``"
msgstr "zapis do alertu, używając ``window.alert()``"

#: ../../source/tutorial/browser_programming/output/index.rst:7
msgid "printing into the HTML output using ``document.write()``"
msgstr "zapis do wyjście HTML, używając ``document.write()``"

#: ../../source/tutorial/browser_programming/output/index.rst:8
msgid "printing into an HTML element, using ``element.innerHTML=``"
msgstr "zapis do elementu HTML, używając ``element.innerHTML=``"

#: ../../source/tutorial/browser_programming/output/index.rst:9
msgid "printing into the browser console, using ``console.log()``"
msgstr "zapis do konsoli przeglądarki, używając ``console.log()``"

#: ../../source/tutorial/browser_programming/output/index.rst:11
msgid "However the recommended is the Plezuro way using ``dumpl`` method."
msgstr "Jednak zalecanym sposobem w Plezuro jest użycie metody ``dumpl``."

#: ../../source/tutorial/browser_programming/output/index.rst:13
msgid ""
"It looks like Javascript but be aware ex. ``alert()`` without ``window`` "
"will not work unless you pass the ``window`` variable as the zero argument. "
"This is because the zero argument in Plezuro is treated like this object."
msgstr ""
"Wygląda to jak Javascript, ale wiedz, że ``alert`` bez ``window`` nie "
"zadziała dopóki nie przekaże mu się zmiennej ``window`` jako zerowy "
"argument. Jest tak ponieważ zerowy argument w Plezuro jest traktowany jako "
"dany obiekt."

#: ../../source/tutorial/browser_programming/storage/index.rst:2
msgid "Storage"
msgstr "Pamięć"

#: ../../source/tutorial/browser_programming/storage/index.rst:4
msgid ""
"In programming almost all the time you need to store some data. Part of it "
"is more durable and other part less."
msgstr ""
"W programowaniu prawie cały czas potrzeba zapisywać jakieś dane. Część nich "
"jest bardziej trwała a inna część mniej."

#: ../../source/tutorial/browser_programming/storage/index.rst:7
msgid "In web browser programming you can use the following types of storage:"
msgstr ""
"W programowaniu na przeglądarkę internetową, dostępne są następujące rodzaje"
" pamięci:"

#: ../../source/tutorial/browser_programming/storage/index.rst:9
msgid "Durable unless the page is reloaded or closed:"
msgstr "Trwałe dopóki strona jest przeładowana lub zamknięta:"

#: ../../source/tutorial/browser_programming/storage/index.rst:12
msgid "Javascript memory"
msgstr "pamięć Javascript"

#: ../../source/tutorial/browser_programming/storage/index.rst:14
msgid "More durable:"
msgstr "Bardziej trwałe"

#: ../../source/tutorial/browser_programming/storage/index.rst:16
msgid "localStorage"
msgstr ""

#: ../../source/tutorial/browser_programming/storage/index.rst:17
msgid "sessionStorage"
msgstr ""

#: ../../source/tutorial/browser_programming/storage/index.rst:18
msgid "indexedDB"
msgstr ""

#: ../../source/tutorial/browser_programming/storage/index.rst:19
msgid "cookies"
msgstr ""

#: ../../source/tutorial/browser_programming/storage/index.rst:21
msgid ""
"Naturally, in Plezuro you have the full access to all of them. Moreover "
"there is easy memory sharing between Plezuro and Javascript with global "
"variables or object fields (public as well private)."
msgstr ""
"Naturalnie, w Plezuro jest pełny dostęp do wszystkich tych rodzajów. Ponadto"
" jest wymiana pamięci pomiędzy Plezuro a Javascript poprzez zmienne globalne"
" lub pola obiektu (publiczne jak równie prywatne)."

#: ../../source/tutorial/browser_programming/storage/index.rst:0
msgid "storage/index.html"
msgstr ""

#: ../../source/tutorial/browser_programming/storage/index.rst:0
msgid "storage/main.plez"
msgstr ""

#: ../../source/tutorial/about/how_to/index.rst:15
msgid ""
"Using the plezuro.jar (download from "
"https://plezuro.herokuapp.com/downloads/plezuro.jar) executable you can "
"compile a script from Plezuro to Javascript. It works for entire files, not "
"a code embedded in HTML. You can use it within a browser, in the server side"
" (using Node.js), for the mobile development (using Cordova) or any other "
"technology that uses Javascript. Another important thing is to attach the "
"plezuro.js (download from "
"https://plezuro.herokuapp.com/downloads/plezuro.js) library (in HTML for "
"browser and Cordova or using 'require' for Node.js). There is an automated "
"support for all the Javascript libraries because you can use all the global "
"variables from the Javascript. A variable cannot contain the dollar sign in "
"its name in contrary to the Javascript so using jQuery instead of a dollar "
"sign you should use the variable jQuery or eventually ``eval('$')``."
msgstr ""
"Używając pliku wykonywalnego plezuro.jar (pobierz "
"https://plezuro.herokuapp.com/downloads/plezuro.jar), możesz skompilować "
"skrypt z Plezuro do Javascripta. Działa to dla całych plików, ale nie dla "
"kodu zagnieżdżonego w HTML. Można używać Plezuro w Przeglądarce, po stronie "
"serwera (używając Node.js), w tworzeniu aplikacji mobilnych (używając "
"pakietu Cordova) lub w jakiejkolwiek innej technologii używającej "
"Javascript. Inną ważną sprawą jest dołączenie biblioteki plezuro.js (pobierz"
" z https://plezuro.herokuapp.com/downloads/plezuro.js). Możesz to zrobić w "
"HTML w aplikacji na przeglądarkę lub Cordovie bądź przy użyciu ``require`` w"
" Node.js). Istnieje automatyczne wsparcie dla wszystkich bibliotek "
"Javascriptowych, bo można w Plezuro używać wszystkich zmiennych z "
"Javascript. Zmienna nie może zawierać znaku dolara w jej nazwie w "
"przeciwieństwie do Javascripta, więc aby użyć jQuery, zamiast znaku dolara "
"należy użyć zmiennej jQuery lub ewentualnie ``eval('$')``."

#: ../../source/tutorial/basics/operators/index.rst:4
msgid ""
"One of the important features of a programming language are operators. "
"Technically it would be possible to create a language without operators. "
"However it facilities much the syntax. For example in an expression ``1+3`` "
"we have an operator ``+`` which does the addition. In comparison with other "
"languages, Plezuro has some special operators such as the comma (',') or the"
" semicolon (';')."
msgstr ""
"Jedną z ważnych możliwości języka programowania jest użycie operatorów. "
"Technicznie byłoby możliwe stworzyć język bez operatorów. Jednak uproszczają"
" one bardzo składnię. Na przykład w wyrażeniu ``1+3`` mamy operator ``+``, "
"który wykonuje dodawanie. W porównaniu z innymi językami, Plezuro posiada "
"pewne specjalne operatory takie jak przecinek ``,`` czy średnik ``;``."

#: ../../source/tutorial/basics/operators/index.rst:16
msgid ""
"The action of an operator depends of the type of the zero argument. It "
"behaves in the same way like the method call. It is possible to change the "
"operators action in the runtime (even you can cause that 2+2 produce another"
" result than 4 so it is not recommended to change it in abundance)."
msgstr ""
"Akcja operatora zależy od typu zerowego argumentu. Działanie jest identyczne"
" jak w przypadku wywołania metody. Jest możliwe zmienić akcję operatorów w "
"trakcie wykonywania programu (możesz nawet spowodować, że wyrażenie `2+2` "
"zwróci wynik inny niż 4, więc nie jest zalecane używać tego nadmiernie)"

#: ../../source/tutorial/basics/operators/index.rst:57
msgid ""
"double-argument operators (the zero argument, the operator, the first "
"argument; from the evaluated at the end to the evaluated at the begin)"
msgstr ""
"dwuargumentowe operatory (zerowy argument, operator, pierwszy argument)"

#: ../../source/tutorial/basics/variables/index.rst:32
msgid ""
"The scope of a variable is limited within the curlies ('{', '}') which are "
"used for the function (even a conditional or a loop used an inner function)."
" So if you want to use a variable across multiple functions, you have to "
"declare it a propriate place."
msgstr ""
"Zasięg zmiennej jest ograniczony w obrębie klamer (``{``, ``}``), które to są"
" używane do tworzenie funkcji (nawet instrukcja warunkowa czy pętla to "
"wewnętrzna funkcja). Zatem jeśli chcesz używać zmiennej w obrębie wielu "
"funkcji, musisz zadeklarować ją w odpowiednim miejscu."

#: ../../source/tutorial/objective/constructor/index.rst:4
msgid ""
"Technically it would be possible to create an object without constructor. "
"You could initialize all the fields with one or multiple methods (using the "
"builder pattern). Eventually after that you could freeze the entire object "
"or some of its fields."
msgstr ""
"Technicznie byłoby możliwe stworzyć obiekt bez konstruktora. Możesz "
"zainicjalizować wszystkie pola jedną lub wieloma metodami (używając wzorca "
"builder). Ewentualnie po tym można by zamrozić cały obiekt lub tylko niektóre"
" z jego pól."

#: ../../source/tutorial/objective/inheritance/index.rst:30
msgid ""
"One of useful features is the possibility of the calling a parent method. "
"The syntax is similar to the Python because in the case of multiple "
"inheritance, you have to specify from which parent you want to call a "
"method. It is also possible to call a method from a super-parent and even "
"from any other class because of duck typing. You write a parent module name,"
" the double colon ('::'), the method name and the 'this' keyword like the "
"zero argument."
msgstr ""
"Ważną sprawą jest możliwość wywołania metody rodzica. Składnie jest podobna "
"do tej w Pythonie, ponieważ z powodu wielokrotnego dziedziczenia, trzeba "
"określić, z którego rodzica metoda ma być wywołana. Jest również możliwe "
"wywołać metodę z dalszego przodka a nawet z jakiegokolwiek innego moduły z "
"powodu duck typing. Składnia jest następująca: najpierw nazwa modułu, "
"następnie podwójny dwukropek `::`, nazwa metody oraz słowo ``this`` jako "
"zerowy argument."

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:79
msgid ""
"You can change the CSS style. You can use the CSS name with a hyphen ``-`` "
"as well the camelcase. For example ``element['style']['backgroundColor'] = "
"'red'``"
msgstr ""
"Możesz zmienić styl CSS. Można użyć nazwy CSS z myślnikiem ``-`` jak również"
" camelcase. Np. ``element['style']['backgroundColor'] = 'red'``"

#: ../../source/tutorial/browser_programming/html_dom_methods/index.rst:141
msgid "It fires when a key is being pressed (even multiple times)."
msgstr "Jest wywoływany kiedy klawisz jest wciśnięty (nawet wiele razy)."

#: ../../source/tutorial/browser_programming/html_elements/index.rst:18
msgid ""
"It stands for HTML Document Object Model. It represents a tree of objects."
msgstr ""
"Ten skrót oznaczy Document Object Model (dokumentowy-obiektowy model). "
"Przedstawia drzewo obiektów."

#: ../../source/tutorial/about/how_to/index.rst:4
msgid ""
"Currently the main version of the Plezuro is compiled to Javascript. In the "
"future it is planned to compile it to another languages (probably c, c♯, "
"Java, Python, Ruby and PHP, eventually Lisp and Fortran). It exists also an "
"interpreted version implemented in c♯ which is not supported anymore. That "
"version is not compatible in 100% with the mainstream Plezuro. It is "
"something like a prototype of the final product."
msgstr ""
"Obecnie główna wersja Plezuro jest kompilowana do Javascripta. W przyszłości"
" jest planowane kompilowanie do innych języków (prawdopodobnie C, C♯, Java, "
"Python, Ruby i PHP, eventualnie Lisp i Fortran). Istnieje również wersja "
"interpretowana zaimplementowana w C♯, która jednak nie jest dłużej "
"rozwijana. Tamta wersja nie jest w pełni zgodna w główną wersją Plezuro. To "
"coś na kształt prototypu końcowego produktu."

#: ../../source/tutorial/about/origin/index.rst:9
msgid "Useful materials"
msgstr "Przydatne materiały"

#: ../../source/tutorial/about/origin/index.rst:13
msgid "https://github.com/oprogramador/plezuro_js"
msgstr ""

#: ../../source/tutorial/about/origin/index.rst:15
msgid "Official website:"
msgstr "Oficjalna strona internetowa:"

#: ../../source/tutorial/basics/collections/index.rst:11
msgid ""
"The most basic one is the list. To create a list, you use square brackets "
"('[', ']'), the elements are separated by a comma (','). It can contain "
"objects of different types (like list in Python, Ruby, Javascript or PHP as "
"well List<Object> in Java or List<object> in c♯). It implies that a list can"
" also contain other lists. Moreover a list can contain a self-reference (it "
"means one of its elements is a pointer to this list) because the lists are "
"passed by reference to functions and to collections."
msgstr ""
"Podstawową z nich jest lista. Aby ją stworzyć, powinieneś użyć nawiasów "
"kwadratowych ('[', ']') oraz elementów oddzielonych przecinkiem (','). Lista"
" może zawierać obiekty różnych typów (tak jak lista w Pythonie, Ruby, "
"Javascripcie, PHP jak również List<Object> w Javie czy List<object> w C♯). Z"
" tego wynika że lista może zawierać nawet inne listy. Ponadto lista może "
"mieścić w sobie samo-referencję (to znaczy że jeden z jej elementów jest "
"wskaźnikiem na nią samą) ponieważ listy są przekazywane przez referencję to"
" funkcji oraz kolekcji."

#: ../../source/tutorial/basics/collections/index.rst:36
msgid ""
"Basically it is a set of pairs key-value. It is like dictionary in Python, "
"hash in Ruby, Dictionary<object, object> in c♯ or Map<Object, Object> in "
"Java. However there is a notably difference between the Plezuro dictionary "
"and associative array in PHP or object in Javascript because in the "
"dictionary the order of the items does not matter and generally it is stored"
" using a binary tree. You write it with a hash sign ('#') and brackets."
msgstr ""
"W prostym ujęcie to zbiór par klucz-wartość. To tak jak dictionary Pythonie,"
" hash w Ruby, Dictionary<object, object> w C♯ czy Map<Object, Object> w "
"Javie. Jednakże istnieje istotna różnica pomiędzy słownikiem Plezuro a "
"tablicą asocjacyjną w PHP czy obiektem w Javascripcie gdyż w słowniku nie ma"
" znaczenia kolejność elementów  i ogólnie jest przechowywany na drzewie "
"binarnym. Możesz zapisać słownik przy użyciu krzyżyka ('#') oraz nawiasów."

#: ../../source/tutorial/basics/comments/index.rst:4
msgid ""
"The comments are like in c++, Java, and c♯. You can comment one line using "
"'//' or multiple lines using '/\\*' and '\\*/'."
msgstr ""
"Komentarze wyglądają tak jak w C++, Javie czy C♯. Możesz zakomentować jedną "
"linię, używając '//' lub wiele linii przy użyciu '/\\*' oraz '\\*/."

#: ../../source/tutorial/basics/variables/index.rst:10
msgid ""
"In the Plezuro like in the majority of the programming languages a variable "
"name can begin with a letter or an underscore ('_') and the next characters "
"of the name can be a letter, an underscore or a digit. The case of the "
"characters matters (like in c, Java, Python and so on, differently from SQL "
"and HTML). You can use only the ASCII letters. It is for the readability (it"
" would be extremely strange if someone used Arabic, Chinese characters or "
"some mix of them). The recommended style of the naming all the variables "
"(including functions and modules) is the camelcase (ex. "
"```aVeryInterestingVariable```)."
msgstr ""
"W Plezuro tak jak w większości języków nazwa zmiennej może zaczynać się "
"literą lub podkreśleniem ``_`` a następne znaki to litera, podkreślenie lub "
"cyfra. Wielkość liter nie ma znaczenia (tak jak w C, Javie, Pythonie i tak "
"dalej, przeciwnie do SQL i HTML). Można używać jedynie znaków ASCII. Jest "
"tak dla czytelności kodu (byłoby zupełnie dziwne jeśli ktoś użyłby liter "
"arabskich, chińskich czy jakiejś mieszaniny tego i tego). Zalecany styl "
"nazywania zmiennych (w tym funkcji i modułów) to camelcase (np. "
"``aVeryInterestingVariable``)."

#: ../../source/tutorial/index.rst:8
msgid ""
"If you are a programmer who just knows another programming language (ex. c, "
"Java, Python...), this tutorial bring you the knowledge necessary to create "
"applications in Plezuro. Nonetheless the experience is what is the most "
"important in programming technologies. So just try to write more and more in"
" Plezuro."
msgstr ""
"Jeśli jesteś programistą, który zna już inny język programowania (np. C, "
"Java, Python...), ten przewodnik przyniesie ci wiedzę potrzebną do tworzenia"
" aplikacji w Plezuro. Jednakże w technologiach programistycznych to "
"doświadczenie jest najważniejsze. Zatem po prostu próbuj pisać jak najwięcej"
" w Plezuro."

#: ../../source/tutorial/objective/inheritance/index.rst:4
msgid ""
"To write an object-oriented code except of classes (in Plezuro modules) it "
"is needed to use inheritance and polymorphism. In Plezuro there is multiple "
"inheritance like in Python, it is also similar to multiple inheritance in "
"c++ with virtual method binding. Why multiple inheritance? It is just more "
"similar to the real life. For example, the dog is in the same time a pet and"
" a carnivore."
msgstr ""
"Żeby pisać kod obiektowy poza klasami (w przypadku Plezuro modułami) jest "
"niezbędne użycie dziedziczenia i polimorfizmu. W Plezuro występuje "
"wielokrotne dziedziczenie tak jak w Pythonie, jest także nieco podobne do "
"wielokrotnego dziedziczenia w C++ przy użyciu wirtualnego wiązania metod. "
"Dlaczego wielokrotne dziedziczenie? To po prostu bardziej zbliżone do "
"prawdziwego życie. Np. pies jest w tym samym czasie zwierzęciem domowym i "
"drapieżnikiem"

#: ../../source/tutorial/about/origin/index.rst:11
msgid "On Github:"
msgstr "Na Githubie"

#: ../../source/tutorial/about/origin/index.rst:17
msgid "https://plezuro.herokuapp.com"
msgstr ""
